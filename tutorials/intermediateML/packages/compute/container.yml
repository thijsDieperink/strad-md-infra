name: compute
version: 1.0.0
kind: ecu # Executable Code Unit

description: |
  Exposes utilities for preprocessing data, training a classifier, 
  and generating a valid submission file for the Kaggle challenge
  'Natural Language Processing with Disaster Tweets'.

contributors:
  - Andrea Marino <am.marinoandrea@gmail.com>
  - Jingye Wang <wangjycode@gmail.com>

dependencies:
  - python3
  - python3-yaml

install:
  - apt update && apt upgrade -y
  - apt install pipenv -y

files:
  - Pipfile
  - Pipfile.lock
  - __init__.py
  - run.py
  - model.py 
  - preprocess.py

unpack:
  - pipenv install --system --deploy
  - python3 -c "import nltk; nltk.download('stopwords'); nltk.download('wordnet'); nltk.download('omw-1.4')"

entrypoint:
  kind: task
  exec: run.py

actions:
  'clean':
    command:
      capture: marked
      args:
        - clean
    input:
      - type: IntermediateResult
        name: filepath
    output:
      - type: IntermediateResult
        name: filepath

  'tokenize':
    command:
      capture: marked
      args:
        - tokenize
    input:
      - type: IntermediateResult
        name: filepath
    output:
      - type: IntermediateResult
        name: filepath

  'remove_stopwords':
    command:
      capture: marked
      args:
        - remove_stopwords
    input:
      - type: IntermediateResult
        name: filepath
    output:
      - type: IntermediateResult
        name: filepath

  'create_vectors':
    command:
      capture: marked
      args:
        - create_vectors
    input:
      - type: IntermediateResult
        name: train_set
      - type: IntermediateResult
        name: test_set
    output:
      - type: IntermediateResult
        name: vectors

  'train_model':
    command:
      capture: marked
      args:
        - train_model
    input:
      - type: IntermediateResult
        name: filepath_dataset
      - type: IntermediateResult
        name: filepath_vectors
    output:
      - type: IntermediateResult
        name: filepath_model

  'create_submission':
    command:
      capture: marked
      args:
        - create_submission
    input:
      - type: IntermediateResult
        name: filepath_dataset
      - type: IntermediateResult
        name: filepath_vectors
      - type: IntermediateResult
        name: filepath_model
    output:
      - type: IntermediateResult
        name: filepath_submission

  'generate_bigrams':
    command:
      capture: marked
      args:
        - generate_bigrams
    input:
      - type: IntermediateResult
        name: filepath
    output:
      - type: IntermediateResult
        name: filepath
